{"ast":null,"code":"var _jsxFileName = \"D:\\\\sattebaazi\\\\frontend\\\\src\\\\ActiveBets.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from \"react\";\nimport PageLayout from \"./PageLayout\";\nimport CompanyShortlistModal from './CompanyShortlistModal';\nimport axios from 'axios';\nimport { motion } from \"framer-motion\";\n\n// This is your original hardcoded data for meta info, it can stay\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst companiesMeta = [{\n  name: \"American Express\",\n  role: \"Data Science\",\n  expires: \"31/11/2024\",\n  tokens: 94036,\n  domain: \"data\"\n}\n// ... all your other companiesMeta\n];\nconst domainLabels = {\n  quant: \"Quant\",\n  sde: \"SDE\",\n  product: \"Product\",\n  data: \"Data\",\n  core: \"Core\",\n  misc: \"Misc\"\n};\nexport default function ActiveBets({\n  user,\n  showUserGuideModal,\n  setShowUserGuideModal\n}) {\n  _s();\n  const [modalOpen, setModalOpen] = useState(false);\n  const [selectedCompany, setSelectedCompany] = useState(null);\n  const [search, setSearch] = useState(\"\");\n\n  // State for live data from the API\n  const [activeBetsData, setActiveBetsData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // useEffect to fetch live data from the API\n  useEffect(() => {\n    const fetchActiveBets = async () => {\n      try {\n        const res = await axios.get('http://localhost:5000/api/bets/active');\n        setActiveBetsData(res.data);\n      } catch (err) {\n        console.error(\"Failed to fetch active bets\", err);\n        setError(\"Could not load active bets.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchActiveBets();\n  }, []);\n\n  // This logic correctly groups your flat list of bets by company for display\n  const filteredCompanies = useMemo(() => {\n    const companiesMap = new Map();\n    activeBetsData.forEach(bet => {\n      const company = bet.companyEvent;\n      if (!company) return;\n      if (!companiesMap.has(company._id)) {\n        companiesMap.set(company._id, {\n          ...company,\n          id: company._id,\n          // Keep `id` for your JSX keys\n          name: company.companyName,\n          role: company.jobProfile,\n          shortlist: []\n        });\n      }\n      if (bet.candidate) {\n        const companyOnMap = companiesMap.get(company._id);\n        if (!companyOnMap.shortlist.find(c => c._id === bet.candidate._id)) {\n          companyOnMap.shortlist.push(bet.candidate);\n        }\n      }\n    });\n    let companies = Array.from(companiesMap.values());\n    if (!search.trim()) return companies;\n    const term = search.trim().toLowerCase();\n    return companies.filter(c => c.name.toLowerCase().includes(term) || c.role && c.role.toLowerCase().includes(term));\n  }, [search, activeBetsData]);\n\n  // Placeholder function until we build the \"Place Bet\" API\n  function handleModalSubmit() {\n    console.log(\"Submit button clicked. API will be connected next.\");\n    setModalOpen(false);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      user: user,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading Active Bets...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(PageLayout, {\n      user: user,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(PageLayout, {\n    user: user,\n    onUserGuide: () => setShowUserGuideModal(true),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full flex flex-col items-center mb-6 mt-0\",\n      children: [/*#__PURE__*/_jsxDEV(motion.h1, {\n        initial: {\n          opacity: 0,\n          y: -30\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        } /* ... */,\n        children: \"Active Bets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        initial: {\n          opacity: 0\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        } /* ... */,\n        children: \"Place your bets on upcoming placements\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(motion.input, {\n        type: \"text\",\n        value: search,\n        onChange: e => setSearch(e.target.value) /* ... */\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"w-full grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 px-0\" /* ... */,\n      children: filteredCompanies.length === 0 ? /*#__PURE__*/_jsxDEV(motion.div, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this) : filteredCompanies.map(company => {\n        // We define the helpers here, using the correct live data\n        const totalTokens = activeBetsData.filter(bet => {\n          var _bet$companyEvent;\n          return ((_bet$companyEvent = bet.companyEvent) === null || _bet$companyEvent === void 0 ? void 0 : _bet$companyEvent._id) === company.id;\n        }).reduce((sum, bet) => sum + (Number(bet.amount) || 0), 0);\n        const meta = companiesMeta.find(meta => meta.name.toLowerCase() === company.name.toLowerCase()) || {};\n        return /*#__PURE__*/_jsxDEV(motion.div, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex items-center justify-between px-4 pt-4 pb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-2xl font-bold text-[#28c76f]\",\n              children: company.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"...\",\n              children: company.shortlist.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4 flex ...\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"...\",\n              children: domainLabels[meta.domain] || company.role\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"...\",\n              children: meta.expires || new Date(company.expiresAt).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"...\",\n              children: [totalTokens.toLocaleString(), \" tokens\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"px-4 pt-1 pb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"font-semibold text-gray-200 mb-2\",\n              children: \"Top Bettors:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex flex-col gap-2\",\n              children: company.shortlist.length > 0 ? company.shortlist.slice(0, 3).map(cand => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex ...\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"...\",\n                  children: cand.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 45\n                }, this)\n              }, cand._id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 41\n              }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-gray-400\",\n                children: \"No bets yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 42\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end px-4 pb-3 pt-1\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"...\",\n              onClick: () => {\n                setSelectedCompany(company);\n                setModalOpen(true);\n              },\n              children: \"View Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)]\n        }, company.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CompanyShortlistModal, {\n      open: modalOpen,\n      onClose: () => setModalOpen(false),\n      company: selectedCompany,\n      candidates: (selectedCompany === null || selectedCompany === void 0 ? void 0 : selectedCompany.shortlist) || [],\n      onSubmit: handleModalSubmit,\n      stakes: {} // Placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 9\n  }, this);\n}\n_s(ActiveBets, \"mQjs6tT4FBMn1ha2YL/kdGgZlfw=\");\n_c = ActiveBets;\nvar _c;\n$RefreshReg$(_c, \"ActiveBets\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","PageLayout","CompanyShortlistModal","axios","motion","jsxDEV","_jsxDEV","companiesMeta","name","role","expires","tokens","domain","domainLabels","quant","sde","product","data","core","misc","ActiveBets","user","showUserGuideModal","setShowUserGuideModal","_s","modalOpen","setModalOpen","selectedCompany","setSelectedCompany","search","setSearch","activeBetsData","setActiveBetsData","loading","setLoading","error","setError","fetchActiveBets","res","get","err","console","filteredCompanies","companiesMap","Map","forEach","bet","company","companyEvent","has","_id","set","id","companyName","jobProfile","shortlist","candidate","companyOnMap","find","c","push","companies","Array","from","values","trim","term","toLowerCase","filter","includes","handleModalSubmit","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onUserGuide","className","h1","initial","opacity","y","animate","div","input","type","value","onChange","e","target","length","map","totalTokens","_bet$companyEvent","reduce","sum","Number","amount","meta","Date","expiresAt","toLocaleDateString","toLocaleString","slice","cand","onClick","open","onClose","candidates","onSubmit","stakes","_c","$RefreshReg$"],"sources":["D:/sattebaazi/frontend/src/ActiveBets.js"],"sourcesContent":["import React, { useState, useEffect, useMemo } from \"react\";\nimport PageLayout from \"./PageLayout\";\nimport CompanyShortlistModal from './CompanyShortlistModal';\nimport axios from 'axios';\nimport { motion } from \"framer-motion\";\n\n// This is your original hardcoded data for meta info, it can stay\nconst companiesMeta = [\n    { name: \"American Express\", role: \"Data Science\", expires: \"31/11/2024\", tokens: 94036, domain: \"data\" },\n    // ... all your other companiesMeta\n];\nconst domainLabels = {\n    quant: \"Quant\", sde: \"SDE\", product: \"Product\", data: \"Data\", core: \"Core\", misc: \"Misc\"\n};\n\nexport default function ActiveBets({ user, showUserGuideModal, setShowUserGuideModal }) {\n    const [modalOpen, setModalOpen] = useState(false);\n    const [selectedCompany, setSelectedCompany] = useState(null);\n    const [search, setSearch] = useState(\"\");\n\n    // State for live data from the API\n    const [activeBetsData, setActiveBetsData] = useState([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    // useEffect to fetch live data from the API\n    useEffect(() => {\n        const fetchActiveBets = async () => {\n            try {\n                const res = await axios.get('http://localhost:5000/api/bets/active');\n                setActiveBetsData(res.data);\n            } catch (err) {\n                console.error(\"Failed to fetch active bets\", err);\n                setError(\"Could not load active bets.\");\n            } finally {\n                setLoading(false);\n            }\n        };\n        fetchActiveBets();\n    }, []);\n    \n    // This logic correctly groups your flat list of bets by company for display\n    const filteredCompanies = useMemo(() => {\n        const companiesMap = new Map();\n        activeBetsData.forEach(bet => {\n            const company = bet.companyEvent;\n            if (!company) return;\n\n            if (!companiesMap.has(company._id)) {\n                companiesMap.set(company._id, {\n                    ...company,\n                    id: company._id, // Keep `id` for your JSX keys\n                    name: company.companyName,\n                    role: company.jobProfile,\n                    shortlist: []\n                });\n            }\n            if (bet.candidate) {\n                const companyOnMap = companiesMap.get(company._id);\n                if (!companyOnMap.shortlist.find(c => c._id === bet.candidate._id)) {\n                    companyOnMap.shortlist.push(bet.candidate);\n                }\n            }\n        });\n        let companies = Array.from(companiesMap.values());\n\n        if (!search.trim()) return companies;\n        const term = search.trim().toLowerCase();\n        return companies.filter(c => \n            c.name.toLowerCase().includes(term) ||\n            (c.role && c.role.toLowerCase().includes(term))\n        );\n    }, [search, activeBetsData]);\n\n    // Placeholder function until we build the \"Place Bet\" API\n    function handleModalSubmit() {\n        console.log(\"Submit button clicked. API will be connected next.\");\n        setModalOpen(false);\n    }\n    \n    if (loading) {\n        return <PageLayout user={user}><div>Loading Active Bets...</div></PageLayout>;\n    }\n    if (error) {\n        return <PageLayout user={user}><div>{error}</div></PageLayout>;\n    }\n\n    return (\n        <PageLayout user={user} onUserGuide={() => setShowUserGuideModal(true)}>\n            {/* Your full Heading and Search Bar JSX */}\n            <div className=\"w-full flex flex-col items-center mb-6 mt-0\">\n                <motion.h1 initial={{ opacity: 0, y: -30 }} animate={{ opacity: 1, y: 0 }} /* ... */ >\n                    Active Bets\n                </motion.h1>\n                <motion.div initial={{ opacity: 0 }} animate={{ opacity: 1, y: 0 }} /* ... */ >\n                    Place your bets on upcoming placements\n                </motion.div>\n                <motion.input type=\"text\" value={search} onChange={e => setSearch(e.target.value)} /* ... */ />\n            </div>\n\n            {/* Your full grid display */}\n            <motion.div className=\"w-full grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-4 px-0\" /* ... */>\n                {filteredCompanies.length === 0 ? (\n                    <motion.div /* ... your No results found JSX ... */ />\n                ) : filteredCompanies.map(company => {\n                    // We define the helpers here, using the correct live data\n                    const totalTokens = activeBetsData\n                        .filter(bet => bet.companyEvent?._id === company.id)\n                        .reduce((sum, bet) => sum + (Number(bet.amount) || 0), 0);\n                    const meta = companiesMeta.find(meta => meta.name.toLowerCase() === company.name.toLowerCase()) || {};\n                    \n                    return (\n                        <motion.div key={company.id} /* ... your full card design ... */>\n                            <div className=\"flex items-center justify-between px-4 pt-4 pb-1\">\n                                <span className=\"text-2xl font-bold text-[#28c76f]\">{company.name}</span>\n                                <span className=\"...\">{company.shortlist.length}</span>\n                            </div>\n\n                            <div className=\"px-4 flex ...\">\n                                <span className=\"...\">{domainLabels[meta.domain] || company.role}</span>\n                                <span className=\"...\">{meta.expires || new Date(company.expiresAt).toLocaleDateString()}</span>\n                                <span className=\"...\">{totalTokens.toLocaleString()} tokens</span>\n                            </div>\n\n                            <div className=\"px-4 pt-1 pb-1\">\n                                <div className=\"font-semibold text-gray-200 mb-2\">Top Bettors:</div>\n                                <div className=\"flex flex-col gap-2\">\n                                    {company.shortlist.length > 0 ? company.shortlist.slice(0, 3).map(cand => (\n                                        <div key={cand._id} className=\"flex ...\">\n                                            <span className=\"...\">{cand.name}</span>\n                                            {/* Stakes logic to be added later */}\n                                        </div>\n                                    )) : <div className=\"text-gray-400\">No bets yet</div>}\n                                </div>\n                            </div>\n                            \n                            <div className=\"flex justify-end px-4 pb-3 pt-1\">\n                                <button className=\"...\" onClick={() => { setSelectedCompany(company); setModalOpen(true); }}>\n                                    View Details\n                                </button>\n                            </div>\n                        </motion.div>\n                    );\n                })}\n            </motion.div>\n\n            <CompanyShortlistModal\n                open={modalOpen}\n                onClose={() => setModalOpen(false)}\n                company={selectedCompany}\n                candidates={selectedCompany?.shortlist || []}\n                onSubmit={handleModalSubmit}\n                stakes={{}} // Placeholder\n            />\n        </PageLayout>\n    );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}